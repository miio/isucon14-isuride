# 複数serverへ proxy
upstream app {
    server 192.168.0.11:8080 weight=8;
    server 192.168.0.12:5000 weight=10;
    server 192.168.0.13:5000 weight=10;
    # keepalive 60; app server への connection を keepalive する。app が対応できるならした方が良い。
}


server {
  listen 80 default_server;
  server_name _;
  index index.html index.htm index.nginx-debian.html;
  root /var/www/html;
  location / {
    try_files $uri $uri/ =404;
  }
}

server {
  listen 443 ssl default_server;
  server_name _;
  index index.html index.htm index.nginx-debian.html;
  root /var/www/html;

  # bot避けのためのvhostで、この証明書は自己署名です
  ssl_certificate     /etc/nginx/tls/dummy.crt;
  ssl_certificate_key /etc/nginx/tls/dummy.key;
  ssl_protocols TLSv1.3;
  ssl_prefer_server_ciphers off;

  location / {
    try_files $uri $uri/ =404;
  }
}

server {
  listen 443 ssl;
  server_name xiv.isucon.net;
  server_name *.xiv.isucon.net;

  ssl_certificate     /etc/nginx/tls/_.xiv.isucon.net.crt;
  ssl_certificate_key /etc/nginx/tls/_.xiv.isucon.net.key;

  ssl_protocols TLSv1.3;
  ssl_prefer_server_ciphers off;

  client_max_body_size 10m;
  root /home/isucon/webapp/public/;
  location / {
    try_files $uri /index.html;
  }
  location /api/ {
    proxy_set_header Host $host;
    proxy_pass http://app;
  }
  location /api/initialize {
    proxy_set_header Host $host;
    proxy_pass http://192.168.0.11:8080;
  }

  location /api/internal/ {
	  #    # localhostからのみアクセスを許可
	  #    allow 192.168.0.11;
	  #    allow 192.168.0.12;
	  #    allow 192.168.0.13;
	  #    deny all;
    proxy_set_header Host $host;
    proxy_pass http://app;
  }
  location ~ .*\.(html|css|js|jpg|jpeg|png|gif|ico)$ {
          #root /public; # 静的ファイルの場所
          gzip_static always;
          expires 30d;
      add_header Cache-Control "public,max=age=2592000,immutable";
   }
}
